{"ast":null,"code":"import _objectSpread from \"/Users/pvandamm/Documents/react_course_ninja/todo_app_hooks/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport uuid from 'uuid/v4';\n\nconst todoReducer = (state, action) => {\n  switch (action.type) {\n    case 'REMOVE_TODO':\n      return state.filter(todo => todo.id !== action.id);\n\n    case 'ADD_TODO':\n      return [...state, {\n        text: action.text,\n        completed: false,\n        id: uuid()\n      }];\n\n    case 'UPDATE_COMPLETED':\n      const test = state.map(todo => todo.id === action.id ? _objectSpread({}, todo, {\n        completed: true\n      }) : todo);\n      console.log(test);\n      console.log(state);\n      return test;\n\n    default:\n      return state;\n  }\n};\n\nexport default todoReducer;","map":{"version":3,"sources":["/Users/pvandamm/Documents/react_course_ninja/todo_app_hooks/src/reducers/todoReducer.js"],"names":["uuid","todoReducer","state","action","type","filter","todo","id","text","completed","test","map","console","log"],"mappings":";AAAA,OAAOA,IAAP,MAAiB,SAAjB;;AAEA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACtC,UAAQA,MAAM,CAACC,IAAf;AACC,SAAK,aAAL;AACC,aAAOF,KAAK,CAACG,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYJ,MAAM,CAACI,EAA1C,CAAP;;AACD,SAAK,UAAL;AACC,aAAO,CACN,GAAGL,KADG,EAEN;AACCM,QAAAA,IAAI,EAAEL,MAAM,CAACK,IADd;AAECC,QAAAA,SAAS,EAAE,KAFZ;AAGCF,QAAAA,EAAE,EAAEP,IAAI;AAHT,OAFM,CAAP;;AAQD,SAAK,kBAAL;AACC,YAAMU,IAAI,GAAGR,KAAK,CAACS,GAAN,CAAWL,IAAD,IACtBA,IAAI,CAACC,EAAL,KAAYJ,MAAM,CAACI,EAAnB,qBAA6BD,IAA7B;AAAmCG,QAAAA,SAAS,EAAE;AAA9C,WAAuDH,IAD3C,CAAb;AAIAM,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYX,KAAZ;AACA,aAAOQ,IAAP;;AACD;AACC,aAAOR,KAAP;AArBF;AAuBA,CAxBD;;AA0BA,eAAeD,WAAf","sourcesContent":["import uuid from 'uuid/v4'\n\nconst todoReducer = (state, action) => {\n\tswitch (action.type) {\n\t\tcase 'REMOVE_TODO':\n\t\t\treturn state.filter((todo) => todo.id !== action.id)\n\t\tcase 'ADD_TODO':\n\t\t\treturn [\n\t\t\t\t...state,\n\t\t\t\t{\n\t\t\t\t\ttext: action.text,\n\t\t\t\t\tcompleted: false,\n\t\t\t\t\tid: uuid()\n\t\t\t\t}\n\t\t\t]\n\t\tcase 'UPDATE_COMPLETED':\n\t\t\tconst test = state.map((todo) =>\n\t\t\t\ttodo.id === action.id ? { ...todo, completed: true } : todo\n\t\t\t)\n\n\t\t\tconsole.log(test)\n\t\t\tconsole.log(state)\n\t\t\treturn test\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nexport default todoReducer\n"]},"metadata":{},"sourceType":"module"}